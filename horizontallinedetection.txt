
//Horizontal Line Detection

// hm is the horizontal mask that needs to be applied to do the convolution
// t is the threshold value that the output compares to 
int hm[3][3] = { { -1,-1,-1 },{ 2, 2, 2 },{ -1,-1,-1 } };
int t = 70;
int a = 0;

for (j = 1; j< height - 1; j++)
	for (k = 1; k < width - 1; k++)
	{
		/*	a multiply the value in the vicinity and sum them
		convolution
			a is the result of the horizontal convolution
		*/
		a = image_in[j - 1][k - 1] * hm[0][0]
			+ image_in[j + 0][k - 1] * hm[1][0]
			+ image_in[j + 1][k - 1] * hm[2][0]
			+ image_in[j - 1][k + 0] * hm[0][1]
			+ image_in[j + 0][k + 0] * hm[1][1]
			+ image_in[j + 1][k + 0] * hm[2][1]
			+ image_in[j - 1][k + 1] * hm[0][2]
			+ image_in[j + 0][k + 1] * hm[1][2]
			+ image_in[j + 1][k + 1] * hm[2][2];
		if (a > t) {
			image_out[j][k] = 255;
		}
		else
		{
			image_out[j][k] = 0;
		}
	}