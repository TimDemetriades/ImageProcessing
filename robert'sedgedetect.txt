
/*	Robert's edge detection algorithm. Convolute the image with the 
	mask below. Take the absolute value of the result for both of the
	convolution. If the sum is greater than the threshold value, the 
	pixel is white else black.
*/

/*	gx and gy are both masks for the edge detection
*/
int gx[2][2] = { {-1, 0},{0,1} };
int gy[2][2] = { { 0,-1},{1,0} };

/*	a and b are the result of the convolution
*/

int a;
int b;

// t is the threshold value. User input should allow it to be changed

int t = 70;

for (j = 1; j< height - 1; j++)
	for (k = 1; k < width - 1; k++)
	{
		a = image_in[j - 1][k - 1] * gx[0][0]
			+ image_in[j + 0][k - 1] * gx[1][0]
			+ image_in[j - 1][k + 0] * gx[0][1]
			+ image_in[j + 0][k + 0] * gx[1][1];

		b = image_in[j - 1][k - 1] * gy[0][0]
			+ image_in[j + 0][k - 1] * gy[1][0]
			+ image_in[j - 1][k + 0] * gy[0][1]
			+ image_in[j + 0][k + 0] * gy[1][1];

		if ((abs(a + b)) > t) {
			image_out[j][k] = 255;
		}
		else
		{
			image_out[j][k] = 0;
		}
	}
